#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UFLLoader
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WindART_SMI")]
	public partial class WindART_SMIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProcessFile(ProcessFile instance);
    partial void UpdateProcessFile(ProcessFile instance);
    partial void DeleteProcessFile(ProcessFile instance);
    #endregion
		
		public WindART_SMIDataContext() : 
				base(global::UFLLoader.Properties.Settings.Default.WindART_SMIConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WindART_SMIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WindART_SMIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WindART_SMIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WindART_SMIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProcessFile> ProcessFiles
		{
			get
			{
				return this.GetTable<ProcessFile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessFile")]
	public partial class ProcessFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessFileId;
		
		private System.Nullable<System.DateTime> _ProcessDate;
		
		private string _OriginalName;
		
		private string _Name;
		
		private System.Nullable<int> _FileStatus;
		
		private System.Nullable<int> _FileLocationId;
		
		private System.Nullable<int> _FileFormatId;
		
		private System.Nullable<int> _SiteId;
		
		private System.Nullable<char> _Encrypted;
		
		private string _Encoding;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessFileIdChanging(int value);
    partial void OnProcessFileIdChanged();
    partial void OnProcessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessDateChanged();
    partial void OnOriginalNameChanging(string value);
    partial void OnOriginalNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileStatusChanging(System.Nullable<int> value);
    partial void OnFileStatusChanged();
    partial void OnFileLocationIdChanging(System.Nullable<int> value);
    partial void OnFileLocationIdChanged();
    partial void OnFileFormatIdChanging(System.Nullable<int> value);
    partial void OnFileFormatIdChanged();
    partial void OnSiteIdChanging(System.Nullable<int> value);
    partial void OnSiteIdChanged();
    partial void OnEncryptedChanging(System.Nullable<char> value);
    partial void OnEncryptedChanged();
    partial void OnEncodingChanging(string value);
    partial void OnEncodingChanged();
    #endregion
		
		public ProcessFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessFileId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProcessFileId
		{
			get
			{
				return this._ProcessFileId;
			}
			set
			{
				if ((this._ProcessFileId != value))
				{
					this.OnProcessFileIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessFileId = value;
					this.SendPropertyChanged("ProcessFileId");
					this.OnProcessFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalName", DbType="VarChar(8000)")]
		public string OriginalName
		{
			get
			{
				return this._OriginalName;
			}
			set
			{
				if ((this._OriginalName != value))
				{
					this.OnOriginalNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalName = value;
					this.SendPropertyChanged("OriginalName");
					this.OnOriginalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(8000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileStatus", DbType="Int")]
		public System.Nullable<int> FileStatus
		{
			get
			{
				return this._FileStatus;
			}
			set
			{
				if ((this._FileStatus != value))
				{
					this.OnFileStatusChanging(value);
					this.SendPropertyChanging();
					this._FileStatus = value;
					this.SendPropertyChanged("FileStatus");
					this.OnFileStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileLocationId", DbType="Int")]
		public System.Nullable<int> FileLocationId
		{
			get
			{
				return this._FileLocationId;
			}
			set
			{
				if ((this._FileLocationId != value))
				{
					this.OnFileLocationIdChanging(value);
					this.SendPropertyChanging();
					this._FileLocationId = value;
					this.SendPropertyChanged("FileLocationId");
					this.OnFileLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileFormatId", DbType="Int")]
		public System.Nullable<int> FileFormatId
		{
			get
			{
				return this._FileFormatId;
			}
			set
			{
				if ((this._FileFormatId != value))
				{
					this.OnFileFormatIdChanging(value);
					this.SendPropertyChanging();
					this._FileFormatId = value;
					this.SendPropertyChanged("FileFormatId");
					this.OnFileFormatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteId", DbType="Int")]
		public System.Nullable<int> SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encrypted", DbType="Char(1)")]
		public System.Nullable<char> Encrypted
		{
			get
			{
				return this._Encrypted;
			}
			set
			{
				if ((this._Encrypted != value))
				{
					this.OnEncryptedChanging(value);
					this.SendPropertyChanging();
					this._Encrypted = value;
					this.SendPropertyChanged("Encrypted");
					this.OnEncryptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Encoding", DbType="VarChar(50)")]
		public string Encoding
		{
			get
			{
				return this._Encoding;
			}
			set
			{
				if ((this._Encoding != value))
				{
					this.OnEncodingChanging(value);
					this.SendPropertyChanging();
					this._Encoding = value;
					this.SendPropertyChanged("Encoding");
					this.OnEncodingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
